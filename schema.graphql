type Proposal @entity {

  id: ID! #id is a required field

  project: Project! @index(unique: false)

  proposal: Int!

  start: BigInt! @index(unique: false)

  end: BigInt! @index(unique: false)

  author: CrossChainAccount!

  privacy: Privacy!

  format: VotingFormat!

  optioncount: Int!

  frequency: BigInt

  status: ProposalStatus!

  votes: [String]!

  pubvote: String

  data: String!

  created: Int!

  updated: Int!

  title: String

  description: String

  options: [String]
}

enum Privacy {
  Opaque
  Private
  Public
  Mixed
}

enum VotingFormat {
  SingleChoice
}

enum ProposalStatus {
  Pending
  Ongoing
  Closed
}

enum Protocol {
  Substrate
  Solidity
}

type CrossChainAccount @entity {
  id: ID!
  protocol: Protocol!
}

type Project @entity {
  id: ID!

  owner: CrossChainAccount!

  data: String!

  updated: Int!

  prop_count: Int!

  workspaces: [Workspace]!

  name: String

  description: String

  icon: String

  banner: String
}

enum SolidityStrategy {
  ERC20Balance
}

enum SubstrateStrategy {
  NativeBalance
}

type Strategy @entity {
  id: ID!
  protocol: Protocol!
  solidity: SolidityStrategy
  substrate: SubstrateStrategy
  param: String
}

type Workspace @entity {
  id: ID!
  chain: Int!
  strategies: [Strategy]!
}
